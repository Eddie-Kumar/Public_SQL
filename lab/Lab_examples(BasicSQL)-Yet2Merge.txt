--To be merged with SQL exercises (Basic+Adv.)

-- Practical exercises - Employee sample data:
==============================================

SELECT * FROM emp
SELECT * FROM dept
SELECT * FROM region

--insert a region called "Oceana" with ID - 7
--Insert some data some data:
INSERT INTO region
VALUES (7,'Oceana')

--Remove entire table Region.
DROP TABLE Region

--Remove only Oceana from Region table.
DELETE FROM Region
WHERE rid = 7

--Remove all data from Region table.
DELETE FROM Region
TRUNCATE TABLE Region

--Create Primary Key on Dept table (use 'did' column as PK).
ALTER TABLE dept
ADD CONSTRAINT pk_did
PRIMARY KEY (did)
--CHECK PK:
EXEC sp_help 'dept'


--FK on Emp:
ALTER TABLE emp
ADD CONSTRAINT fk_did
FOREIGN KEY (did) REFERENCES dept(did)
--CHECK FK:
EXEC sp_help 'emp'

--List all employees with their dept-IDs:
SELECT * FROM emp

--List all employees with their dept-names:
SELECT ename, DeptName FROM emp
JOIN dept ON emp.did = dept.did

--List Emp-Names & Region Names (those who are in a region):
SELECT ename, RegionName FROM emp
JOIN region ON emp.rid = region.rid

--List ALL Emp-Names & Region Names (regardless if they are in a region or not):
SELECT ename, RegionName FROM emp LEFT JOIN region ON emp.rid = region.rid

--List ALL Emp-Names, Region Names & Dept-Name (regardless if they are in a region or not):
SELECT ename, RegionName, Deptname FROM emp
	LEFT JOIN region ON emp.rid = region.rid
	RIGHT JOIN dept ON emp.did = dept.did

--List employees with their dept-names, job-title salary but only those who receive more than $25,000.
SELECT ename, jobtitle, DeptName, salary FROM emp
JOIN dept ON emp.did = dept.did
WHERE salary >= 25000

--List employees with their dept-names, job-title salary but only those who receive more 
--than $25,000, with data in sorting order of salary with highest salary on top.
SELECT ename, jobtitle, DeptName, salary FROM emp
JOIN dept ON emp.did = dept.did
WHERE salary >= 25000
ORDER BY salary DESC

--List emp-name, jobtitle whose job-title starts with 'Sales':
SELECT ename, jobtitle, salary FROM emp
WHERE jobtitle LIKE 'Sales%'
--WHERE jobtitle = 'Sales Manager'

--Retrieve employees details along with their Department-names and Region-names for 
--those employees who are in Sales dept and NOT based in Australias region.
select e.ename, d.DeptName, e.salary, e.jobtitle, r.RegionName from emp e
LEFT JOIN dept d on e.did = d.did
LEFT JOIN region r on r.rid = e.rid
WHERE d.DeptName = 'SALES'
	AND r.RegionName NOT LIKE '%Australias%'

--Departments receiving commission:
SELECT distinct d.DeptName from dept d
JOIN emp e ON e.did=d.did
WHERE e.commission IS NOT NULL

--Show highest salary amount:
SELECT 'Max Salary'=MAX(salary) FROM emp

--Show highest salary amount along with: ename & jobtitle:
SELECT eid, ename, jobtitle, 'Max Salary' = salary FROM emp
WHERE salary >= (SELECT MAX(salary) FROM emp) -- = WHERE salary >= 60000

--(3 differnt ways to) Get 2nd highest salary with name, salary, jobtitle (optionally: deptname)
	--Method-1: using inner query:
	SELECT top 1 e.ename, e.salary, e.jobtitle
	FROM emp e
	WHERE eid <> (select top 1 eid from emp order by salary desc)
	ORDER BY e.salary DESC

	--Method-2: OFFSET..FETCH:
	select ename, salary, jobtitle from emp
	order by salary desc
	offset 1 row fetch next 1 row only

	--Method-3: using CTE:
	; WITH top2Sals AS 
		(select top 2 * from emp order by salary desc)
	select top 1 * from top2Sals order by salary asc

--1st employee hired: First person who joined the company and still a current employee:
select top 1 * from emp
order by hiredate asc

--List employees hired on/starting from 2015 (1st Jan 2015)
SELECT  * FROM emp
--use ISO date format / Local format '01/01/2015' not recommended:
WHERE hiredate >= '2015-01-01'
ORDER BY HIREDATE ASC;

--List employees hired between 2012 and 2015:
select * from emp
where hiredate BETWEEN '2012-01-01' AND '2015-01-01'

--Create a VIEW that shows list of employess drawing salary less than 10,000.
CREATE VIEW LowSal
AS
begin
	SELECT ename, jobtitle, salary 
	FROM emp WHERE salary < 10000
end

select * from LowSal

--Create a VIEW called 'v_Emp_Salary_with_Managers' that creates a view
-- retrieving eName, Salary along with their manager names.
	CREATE VIEW v_Emp_Salary_with_Managers AS
	SELECT e.ename, e.salary, e.managerid, m.ename AS [Mgr-Name] from emp e
	JOIN emp m ON e.managerid=m.eid

-----------------------x-----------------------

